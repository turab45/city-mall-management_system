/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.shop.frames;

import com.shop.DAO.PermissionDAO;
import com.shop.DAO.RoleDAO;
import com.shop.DAO.RolePermissionDAO;
import com.shop.DAOImpl.PermissionDAOImpl;
import com.shop.DAOImpl.RoleDAOImpl;
import com.shop.DAOImpl.RolePermissionDAOImpl;
import com.shop.model.Permission;
import com.shop.model.Role;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author Turab Bajeer
 */
public class AssignPermissionFrame extends javax.swing.JFrame {

    /**
     * Creates new form AssignPermissionFrame
     */
    public AssignPermissionFrame() {
        initComponents();

        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        setBounds(100, 100, (int) dim.getWidth(), (int) dim.getHeight());
        setLocationRelativeTo(null);

        jPanel9.setPreferredSize(new Dimension(500, (int) dim.getHeight()));
        jPanel10.setPreferredSize(new Dimension(200, (int) dim.getHeight()));
        jPanel11.setPreferredSize(new Dimension(500, (int) dim.getHeight()));

        unAssignedPermissions.setPreferredSize(new Dimension(500, (int) dim.getHeight()));

        fillRoleCombo();
    }

    RoleDAO roleDAOImpl = new RoleDAOImpl();
    PermissionDAO permissionDAOImpl = new PermissionDAOImpl();
    static Integer roleID = null;
    Integer item = null;
    static Permission p = null;
    static Role r = null;
    RolePermissionDAO rolePermissionDAOImpl = new RolePermissionDAOImpl();

    DefaultListModel<String> unAssignedModel = new DefaultListModel<>();
    DefaultListModel<String> assignedModel = new DefaultListModel<>();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        unAssignedPermissions = new javax.swing.JList<>();
        jPanel10 = new javax.swing.JPanel();
        removeAll = new javax.swing.JButton();
        assignOne = new javax.swing.JButton();
        removeOne = new javax.swing.JButton();
        assignAll = new javax.swing.JButton();
        roleCombo = new javax.swing.JComboBox<>();
        jPanel11 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        assignedPermissions = new javax.swing.JList<>();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(826, 120));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton5.setText("Back");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, java.awt.BorderLayout.LINE_START);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("ASSIGN PERMISSION");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel3.setPreferredSize(new java.awt.Dimension(100, 44));
        jPanel1.add(jLabel3, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.BorderLayout(10, 0));

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));

        jPanel9.setPreferredSize(new java.awt.Dimension(100, 529));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Unassigned Permissions");
        jLabel1.setPreferredSize(new java.awt.Dimension(100, 29));

        unAssignedPermissions.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 51, 51), new java.awt.Color(51, 51, 51)));
        unAssignedPermissions.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        unAssignedPermissions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                unAssignedPermissionsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(unAssignedPermissions);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel9);

        jPanel10.setPreferredSize(new java.awt.Dimension(100, 529));

        removeAll.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        removeAll.setText("<<");
        removeAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAllActionPerformed(evt);
            }
        });

        assignOne.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        assignOne.setText(">");
        assignOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignOneActionPerformed(evt);
            }
        });

        removeOne.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        removeOne.setText("<");
        removeOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeOneActionPerformed(evt);
            }
        });

        assignAll.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        assignAll.setText(">>");
        assignAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignAllActionPerformed(evt);
            }
        });

        roleCombo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        roleCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(assignOne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeOne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(assignAll, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(removeAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(roleCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(roleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addComponent(assignOne)
                .addGap(18, 18, 18)
                .addComponent(removeOne)
                .addGap(18, 18, 18)
                .addComponent(assignAll)
                .addGap(18, 18, 18)
                .addComponent(removeAll)
                .addContainerGap(179, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel10);

        jPanel11.setPreferredSize(new java.awt.Dimension(100, 529));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Assigned Permissions");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel4.setPreferredSize(new java.awt.Dimension(100, 29));

        assignedPermissions.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 51, 51), new java.awt.Color(51, 51, 51)));
        assignedPermissions.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        assignedPermissions.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        assignedPermissions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                assignedPermissionsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(assignedPermissions);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel11);

        jPanel2.add(jPanel4, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void assignAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignAllActionPerformed
        if (roleCombo.getSelectedIndex() == 0) {

        } else {

            int size = unAssignedPermissions.getModel().getSize();

            for (int i = 0; i < size; i++) {

                String perm = unAssignedModel.getElementAt(i);
                p = permissionDAOImpl.getPermissionById(permissionDAOImpl.getPermissionIdByName(perm));
                r = roleDAOImpl.getRoleById(roleID);

                Integer rpId = rolePermissionDAOImpl.getRolePermissionId(r, p);

                rolePermissionDAOImpl.addRollPermission(r, p);

            }
            removeOne.setEnabled(true);
            removeAll.setEnabled(true);
            assignOne.setEnabled(false);
            assignAll.setEnabled(false);
            fillLists();
        }
    }//GEN-LAST:event_assignAllActionPerformed

    private void roleComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleComboActionPerformed
        if (roleCombo.getSelectedIndex() == 0) {
            assignedModel.clear();
            unAssignedModel.clear();
            showAllUnassignedPermissions();
            removeOne.setEnabled(false);
            removeAll.setEnabled(false);
            assignOne.setEnabled(false);
            assignAll.setEnabled(false);
        } else {
            assignedModel.clear();
            String role = roleCombo.getSelectedItem().toString();
            roleID = roleDAOImpl.getRoleIdByName(role);

            
                removeOne.setEnabled(true);
                removeAll.setEnabled(true);
                assignOne.setEnabled(true);
                assignAll.setEnabled(true);
            

            fillLists();
        }
    }//GEN-LAST:event_roleComboActionPerformed

    private void unAssignedPermissionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unAssignedPermissionsMouseClicked
        item = unAssignedPermissions.getSelectedIndex();
    }//GEN-LAST:event_unAssignedPermissionsMouseClicked

    private void assignedPermissionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assignedPermissionsMouseClicked
        item = assignedPermissions.getSelectedIndex();
    }//GEN-LAST:event_assignedPermissionsMouseClicked

    private void assignOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignOneActionPerformed
        if (unAssignedPermissions.getSelectedValue() == null || roleCombo.getSelectedIndex() == 0) {

        } else {
            String perm = unAssignedPermissions.getSelectedValue();
            p = permissionDAOImpl.getPermissionById(permissionDAOImpl.getPermissionIdByName(perm));
            r = roleDAOImpl.getRoleById(roleID);

            rolePermissionDAOImpl.addRollPermission(r, p);
            fillLists();
    }//GEN-LAST:event_assignOneActionPerformed
    }

    private void removeOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeOneActionPerformed
        if (assignedPermissions.getSelectedValue() == null || roleCombo.getSelectedIndex() == 0) {

        } else {
            String perm = assignedPermissions.getSelectedValue();
            p = permissionDAOImpl.getPermissionById(permissionDAOImpl.getPermissionIdByName(perm));
            r = roleDAOImpl.getRoleById(roleID);

            Integer rpId = rolePermissionDAOImpl.getRolePermissionId(r, p);

            rolePermissionDAOImpl.deleteRollPermission(rpId);
            fillLists();
        }
    }//GEN-LAST:event_removeOneActionPerformed

    private void removeAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAllActionPerformed
        if (roleCombo.getSelectedIndex() == 0) {

        } else {

            int size = assignedPermissions.getModel().getSize();

            for (int i = 0; i < size; i++) {

                String perm = assignedModel.getElementAt(i);
                p = permissionDAOImpl.getPermissionById(permissionDAOImpl.getPermissionIdByName(perm));
                r = roleDAOImpl.getRoleById(roleID);

                Integer rpId = rolePermissionDAOImpl.getRolePermissionId(r, p);

                rolePermissionDAOImpl.deleteRollPermission(rpId);

            }
            removeOne.setEnabled(false);
            removeAll.setEnabled(false);
            assignOne.setEnabled(true);
            assignAll.setEnabled(true);
            fillLists();
        }
    }//GEN-LAST:event_removeAllActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        new HomeFrame().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AssignPermissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AssignPermissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AssignPermissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AssignPermissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AssignPermissionFrame().setVisible(true);
            }
        });
    }

    public void fillRoleCombo() {
        List<Role> allRoles = roleDAOImpl.getAllRole();
        roleCombo.addItem("--Select Role--");
        for (Role r : allRoles) {
            roleCombo.addItem(r.getRoleName());
        }
    }

    public void fillLists() {
        List<Permission> allAssignedPermissions = permissionDAOImpl.getPermissionOf(roleID);
        List<Permission> allPermissions = permissionDAOImpl.getAllPermission();

        List<String> allAssignedString = PermissionToString(allAssignedPermissions);

        assignedModel.clear();
        unAssignedModel.clear();
        for (Permission p : allAssignedPermissions) {

            assignedModel.addElement(p.getPermission());

        }

        for (int i = 0; i < allPermissions.size(); i++) {

            if (allAssignedString.contains(allPermissions.get(i).getPermission())) {
                continue;

            } else {

                unAssignedModel.addElement(allPermissions.get(i).getPermission());
            }
        }

        unAssignedPermissions.setModel(unAssignedModel);
        assignedPermissions.setModel(assignedModel);
    }

    public static List<String> PermissionToString(List<Permission> p) {

        List<String> stringList = new ArrayList<>();

        for (Permission per : p) {

            stringList.add(per.getPermission().toString());
        }

        return stringList;
    }

    public void showAllUnassignedPermissions() {

        List<Permission> allPermissions = permissionDAOImpl.getAllPermission();

        for (int i = 0; i < allPermissions.size(); i++) {

            unAssignedModel.addElement(allPermissions.get(i).getPermission());
        }
        unAssignedPermissions.setModel(unAssignedModel);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignAll;
    private javax.swing.JButton assignOne;
    private javax.swing.JList<String> assignedPermissions;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton removeAll;
    private javax.swing.JButton removeOne;
    private javax.swing.JComboBox<String> roleCombo;
    private javax.swing.JList<String> unAssignedPermissions;
    // End of variables declaration//GEN-END:variables
}
